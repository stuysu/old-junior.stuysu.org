const express=require("express"),route=express.Router(),{requireAuthAdmin:requireAuthAdmin}=require("../auth.js"),{Analytics:Analytics,Events:Events,Link:Link,Sheets:Sheets,Attributes:Attributes,sequelize:sequelize}=require("../../models"),TabTypes={dashboard:{page:"./tabs/analytics",scripts:[{src:"/javascripts/admin/analytics.js"}],getData:async()=>({analytics:await Analytics.findAll({order:[["views","DESC"]]})})},calendar:{page:"./tabs/calendar",scripts:[{src:"/javascripts/admin/calendar.js"}],getData:()=>null},events:{page:"./tabs/events",scripts:[{src:"/javascripts/admin/events.js"}],getData:async()=>({events:await Events.findAll()})},"study-guides":{page:"./tabs/guides",scripts:[{src:"/javascripts/admin/sheets.js"}],getData:async()=>{let e=await Sheets.findAll();for(let s of e)s.keywords=await Attributes.findAll({where:{SheetId:s.id}});return{sheets:e}}},links:{page:"./tabs/links",scripts:[{src:"/javascripts/admin/links.js"}],getData:async()=>({links:await Link.findAll({order:sequelize.col("ordering")})})}};function fixed(e){let s=" ",t="";for(let a of e)a="-"===a?" ":a,t+=" "===s?a.toUpperCase():a,s=a;return t}function*getRedirects(e){for(let s in TabTypes)yield{url:`/admin/${s}`,name:fixed(s),active:s===e}}route.get("/",requireAuthAdmin(),(async(e,s,t)=>{s.redirect("/admin/dashboard")})),route.get("/:tab",requireAuthAdmin(),(async(e,s,t)=>{const a=e.params.tab,i=TabTypes[a];s.render("admin/",{redirects:getRedirects(a),page:i.page,data:await i.getData(),scripts:i.scripts})})),module.exports=route;
