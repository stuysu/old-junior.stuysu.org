const express=require("express"),router=express.Router(),{sequelize:sequelize,Link:Link}=require("./../../models"),{CreateError:CreateError}=require("../utils"),{requireAuthApi:requireAuthApi}=require("../auth");function getIntOr(r,e){let t=parseInt(r);return t.toString()===r?t:e}router.put("/links/ordering",requireAuthApi(),(async(r,e,t)=>{void 0!==r.body.id&&void 0!==r.body.ordering||t(CreateError(400,"Expected both an id and an order integer"));try{let t=await Link.update({ordering:r.body.ordering},{where:{id:Number(r.body.id)}});console.log(t),e.status(200).json({id:r.body.id,ordering:r.body.ordering})}catch(r){t(CreateError(400,r))}})),router.get("/links",(async(r,e,t)=>{if(r.query.id){let i=getIntOr(r.query.id,r.query.id);try{let r=await Link.findByPk(i);e.status(200).json(r||{})}catch(r){t(CreateError(400,r))}}else try{let r=await Link.findAll();e.status(200).json(r)}catch(r){t(CreateError(400,r))}})),router.post("/links",requireAuthApi(),((r,e,t)=>{void 0!==r.body.alias&&void 0!==r.body.url||t(CreateError(400,"Excpected alias and url, only one or neither found")),Link.create({alias:r.body.alias,url:r.body.url}).then((t=>{e.status(200).json({created:!0,url:r.body.url,alias:r.body.alias,id:t.id})})).catch((r=>{t(CreateError(400,r))}))})),router.put("/links/",requireAuthApi(),(async(r,e,t)=>{void 0===r.body.id&&t(CreateError(400,"Need a link id to process request"));let i=getIntOr(r.body.id,r.body.id),o={where:{id:i}};try{let a=await Link.findByPk(i),d={found:null!==a};if(d.found){const i=void 0!==r.body.alias,s=void 0!==r.body.url;d.old={url:s?a.url:void 0,alias:i?a.alias:void 0},d.url=r.body.url,d.updatedUrl=s?d.url!==a.url:void 0,d.alias=r.body.alias,d.updatedAlias=i?d.alias!==a.alias:void 0,Link.update({url:r.body.url||d.old.url,alias:r.body.alias||d.old.alias},o).then((()=>{e.status(200).json(d)})).catch((r=>{t(CreateError(400,r))}))}else e.status(200).json(d)}catch(r){t(CreateError(400,r))}})),router.delete("/links/:id",requireAuthApi(),((r,e,t)=>{let i=getIntOr(r.params.id,r.params.id);Link.destroy({where:{id:i}}).then((r=>{e.status(200).json({deleted:1==r,id:i})})).catch((r=>{t(CreateError(400,r))}))})),module.exports=router;
