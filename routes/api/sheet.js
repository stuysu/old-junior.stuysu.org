const express=require("express"),router=express.Router(),{Op:Op}=require("sequelize"),{Sheets:Sheets,Attributes:Attributes}=require("./../../models").sequelize.models,{CreateError:CreateError}=require("../utils"),{requireAuthApi:requireAuthApi}=require("../auth");router.get("/sheets",(async(e,t,r)=>{try{if(e.query.id){let r=await Sheets.findByPk(e.query.id);if("true"===e.query.with_keywords){let e=await Attributes.findAll({where:{SheetId:r.id}});r.dataValues.keywords=e,r.keywords=e}t.status(200).json(r||{})}else if(e.query.any){let r=[];r.push({title:{[Op.like]:`%${e.query.any}%`}}),r.push({author:{[Op.like]:`%${e.query.any}%`}}),r.push({teacher:{[Op.like]:`%${e.query.any}%`}}),r.push({subject:{[Op.like]:`%${e.query.any}%`}});let d=await Sheets.findAll({where:{[Op.or]:r}}),o=new Set;if(d.forEach((e=>{o.add(e.id)})),(await Attributes.findAll({where:{keyword:{[Op.like]:`%${e.query.any}%`}},include:Sheets})).forEach((e=>{o.has(e.Sheet.id)||d.push(e.Sheet)})),"true"===e.query.with_keywords)for(let e of d){let t=await Attributes.findAll({where:{SheetId:e.id}});e.dataValues.keywords=t,e.keywords=t}t.status(200).json(d)}else{let r={};for(let t in e.query)"with_keywords"!==t&&(r[t]={[Op.like]:`%${e.query[t]}%`});let d=await Sheets.findAll({where:r});if(e.query.keyword){let t=new Set;d.forEach((e=>{t.add(e.id)}));let r=await Attributes.findAll({where:{keyword:{[Op.like]:`%${e.query.keyword}%`}},include:Sheets}),o=[];r.forEach((e=>{t.has(e.Sheet.id)&&o.push(e.Sheet)}))}if("true"===e.query.with_keywords)for(let e of d){let t=await Attributes.findAll({where:{SheetId:e.id}});e.dataValues.keywords=t,e.keywords=t}t.status(200).json(d)}}catch(e){console.log("HELLO YOU LITTLE PIECE OF SHIT "+e),r(CreateError(400,e))}})),router.get("/sheets/keywords",(async(e,t,r)=>{try{if(e.query.id){let r=await Attributes.findOne({where:{id:e.query.id}});t.status(200).json(r||{})}else{let r={};e.query.sheetId&&(r.SheetId=e.query.sheetId),e.query.keyword&&(r.keyword={[Op.like]:`%${e.query.keyword}%`});let d=await Attributes.findAll({where:r});t.status(200).json(d)}}catch(e){r(CreateError(400,e))}})),router.put("/sheets/keywords",requireAuthApi(),(async(e,t,r)=>{void 0===e.body.id&&r(CreateError(400,"Need an attribute id to process request"));try{let r=await Attributes.findByPk(e.body.id),d={found:null!==r};if(d.found){const t={where:{id:e.body.id}};d.old={keyword:void 0!==e.body.keyword?r.keyword:void 0},await Attributes.update({keyword:e.body.keyword},t),d.keyword=e.body.keyword}t.status(200).json(d)}catch(e){r(CreateError(400,e))}})),router.put("/sheets",requireAuthApi(),(async(e,t,r)=>{try{let r=await Sheets.findByPk(e.body.id),d={found:null!==r};if(d.found){const t={where:{id:e.body.id}};d.old={url:void 0!==e.body.url?r.url:void 0,subject:void 0!==e.body.subject?r.subject:void 0,title:void 0!==e.body.title?r.title:void 0,author:void 0!==e.body.author?r.author:void 0,teacher:void 0!==e.body.teacher?r.teacher:void 0},await Sheets.update({url:e.body.url,author:e.body.author,title:e.body.title,subject:e.body.subject,teacher:e.body.teacher},t),d.url=e.body.url,d.subject=e.body.subject,d.title=e.body.title,d.author=e.body.author,d.teacher=e.body.teacher}t.status(200).json(d)}catch(e){r(CreateError(400,e))}})),router.post("/sheets/keywords",requireAuthApi(),(async(e,t,r)=>{void 0===e.body.id&&r(CreateError(400,"Sheet id not found, but is required"));try{let r=await Attributes.create({keyword:e.body.keyword,SheetId:e.body.id});t.status(200).json({created:!0,keyword:e.body.keyword,id:r.id,sheetId:e.body.id})}catch(e){r(CreateError(400,e))}})),router.post("/sheets",requireAuthApi(),(async(e,t,r)=>{void 0===e.body.url&&r(CreateError(400,"Sheet url not found, but is required"));try{let r=await Sheets.create({url:e.body.url,title:e.body.title,author:e.body.author,subject:e.body.subject,teacher:e.body.teacher});t.status(200).json({created:!0,id:r.id,url:e.body.url,title:e.body.title,author:e.body.author,subject:e.body.subject,teacher:e.body.teacher})}catch(e){r(CreateError(400,e))}})),router.delete("/sheets/:id",requireAuthApi(),(async(e,t,r)=>{try{let r=await Sheets.destroy({where:{id:e.params.id}});t.status(200).json({deleted:1==r,id:e.params.id})}catch(e){r(CreateError(400,e))}})),router.delete("/sheets/keywords/:id",requireAuthApi(),(async(e,t,r)=>{try{let r=await Attributes.destroy({where:{id:e.params.id}});t.status(200).json({deleted:1==r,id:e.params.id})}catch(e){r(CreateError(400,e))}})),module.exports=router;
