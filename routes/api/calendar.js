const express=require("express"),router=express.Router(),{sequelize:sequelize,Calendar:Calendar}=require("./../../models"),{CreateError:CreateError}=require("../utils"),{requireAuthApi:requireAuthApi}=require("../auth");async function createCalendarEntry(e,r,a){for(let r of[e.body.day,e.body.year,e.body.month])void 0===r&&a(CreateError(400,"Request data for new calendar missing either day, year, or month"));try{let a=await Calendar.create(e.body);a.created=!0,r.status(200).json(a)}catch(e){a(CreateError(400,e))}}router.get("/calendar",(async(e,r,a)=>{try{let a=!0;for(let r of[e.query.day,e.query.year,e.query.month])if(void 0===r){a=!1;break}a?r.status(200).json(await Calendar.findOne({where:{day:e.query.day,year:e.query.year,month:e.query.month}})):void 0===e.query.id?r.status(200).json(await Calendar.findByPk(e.query.id)):r.status(200).json(await Calendar.findAll())}catch(e){a(CreateError(400,e))}})),router.post("/calendar",requireAuthApi(),createCalendarEntry),router.put("/calendar",requireAuthApi(),(async(e,r,a)=>{let t={where:{day:e.body.day||-1,month:e.body.month||-1,year:e.body.year||-1}};try{let d=await Calendar.findOne(t);if(null===d)return void createCalendarEntry(e,r,a);for(let r in d)void 0===e.body[r]&&(e.body[r]=d[r]);await Calendar.update(e.body,t),r.status(200).json({updated:!0})}catch(e){a(CreateError(400,e))}})),router.delete("/calendar/:id",requireAuthApi(),(async(e,r,a)=>{try{let a=await Calendar.destroy({where:{id:e.params.id}});r.status(200).json({id:e.body.id,deleted:1==a})}catch(e){a(CreateError(400,e))}})),module.exports=router;
