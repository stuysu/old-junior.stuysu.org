const path=require("path"),fs=require("fs"),express=require("express");let app=express();const morgan=require("morgan"),logger=morgan("dev"),parser=require("express").Router();parser.use(express.json()),parser.use(express.urlencoded({extended:!1}));const cookieParser=require("cookie-parser"),staticServe=express.static(path.join(__dirname,"public"));function error404(e,r,s){s({status:404,message:`Could not ${e.method}/ on ${e._parsedUrl.pathname}`})}function errorHandler(e,r,s,o){console.log(e);r.url.startsWith("/api")?(e&&(e.error=e.error||!0),s.status(e.status||500).json(e||{error:!0,message:"Server error"})):s.status(e.status||500).render("error",{error:e})}function useRoutes(e,r,s){fs.readdirSync(s).forEach((o=>{e.use(r,require(path.join(s,o)))}))}const{sequelize:sequelize}=require("./models");function setup(e){return"force"===process.env.DATABASE_LOAD?e.sync({force:!0}):"alter"===process.env.DATABASE_LOAD?e.sync({alter:!0}):e.sync()}app.set("views",path.join(__dirname,"views")),app.set("view engine","ejs"),app.use(staticServe),app.use(logger),app.use(parser),app.use(cookieParser()),useRoutes(app,"/api",path.join(__dirname,"routes/api")),useRoutes(app,"/",path.join(__dirname,"routes/docs")),useRoutes(app,"/mobile",path.join(__dirname,"routes/docs")),useRoutes(app,"/admin",path.join(__dirname,"routes/admin")),app.use(error404),app.use(errorHandler),(async()=>{await setup(sequelize);const e=Number(process.env.PORT)||3001;app.listen(e,(()=>console.log(`Listening on ${e}`)))})();
